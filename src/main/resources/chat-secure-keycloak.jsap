{
	"host": "sepa.vaimee.it",
	"oauth": {
		"enable": true,
		"ssl": "TLSv1.2",
		"trustall": true,
		"registration": {
			"endpoint": "https://sepa.vaimee.it:8443/auth/realms/MONAS/clients-registrations/default",
			"initialAccessToken": "eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI4Y2E2ZGNiNC1jZmY5LTQzNGUtODNhNi05NTk4MzQ1NjUxZGMifQ.eyJleHAiOjE1OTk5MTEwNjcsImlhdCI6MTU5OTgyNDY2NywianRpIjoiMjg2NDlhNjMtZDM0Zi00NDc4LWI4ZjAtY2NlY2FjZDk5NTQ2IiwiaXNzIjoiaHR0cHM6Ly9zZXBhLnZhaW1lZS5pdDo4NDQzL2F1dGgvcmVhbG1zL01PTkFTIiwiYXVkIjoiaHR0cHM6Ly9zZXBhLnZhaW1lZS5pdDo4NDQzL2F1dGgvcmVhbG1zL01PTkFTIiwidHlwIjoiSW5pdGlhbEFjY2Vzc1Rva2VuIn0.xrOok3FRc7ylQFGCdB69QFtZpJhuad5Y1LkT2zrpm-E",
			"username": "sepatest"
		},
		"authentication": {
			"endpoint": "https://sepa.vaimee.it:8443/auth/realms/MONAS/protocol/openid-connect/token",
			"client_id": "Aleh0jGV3/CE9fs/fHUjoA==",
			"client_secret": "k14scnWXbXcHDM6MksxRunvIlMmd6lfAzBiifgmgRZCs6XliufzWWXWSUBCOLYig",
			"jwt": "xabtQWoH8RJJk1FyKJ78J3jaFqpRDQjXEwGovBZ5+1k3fauyBMvMa0G6pVNKIgd36MpqN5zlo3QiVsjNa5vsH5Tmgm6w/VCfzwEAOmOnff+yNId5+9GjERaipUo0YIE+HYixcqzD7fTnx928LeYM3/sfs2+tst3XYUeKH4VnDHrQWfDoFVbkvX6jDYQfMl6Y9fdT6s8G3HMwGyZVsex/2bfnV1ebvHByQaTXHCpK5aIuqC9fhh7D+SYxiiST7ZTJ4M1X5NWcWE7wkaUA95+WCYA8Pf7Q8FqOf0oMwZ2FGpUWxXDaVlg8NyVHFIQr3PbkDzuEEbs7/uK6SPHsoAeOqcQYhixNMEzPxbkJYMVk82DikRj3Ydx66ZZqaAuqDDEBZWh+fXL7SKqT60HmzX3agZ41CdOeVzR/ArG3dAvcg1yQgFcut+Ojgz6Ld9sxMbAwpPkxvc62OHbtXuJG2hrGR76mzKd3JJ1lptMfKkefeIpkrCi1T8isAiyfW8szFJasKFILH/Eye0imaE0056JZK4o2mY7F1nSx7jWCUvZUUtj4E+0W4ESni70zcgNV/hTuVl1T3sgjPTc2eTg3UiFikKvPxGOWhs61f0TY8rqHECBkahjGBg7OkWjabMAqfe3ebE8GsrHG1dLkhZI32h8FoB8tKBsVvfGEzPlkt2EYeTkbSPGhu4GjJeXZVA9WrjQSlxbBZwCSxjGK+cxW9fPKj+kQcfhBqrjJZxnCWlSidam6twymwUS6QhAJaetm2GQzyvPXIz6KdaMGY2mug+l9cvfMw5rAJgXDDKHiypDXn2kPQc7hY+tteXEYIdU9gpjK9NLWcf47bUj+u7YUNmvNvtF58X+XXHpc+1KXhnwRq33JON6e8Vwkt8K8qQTJEBK1uB/DzmiONbhybyeiAmJ+gkTAAwBdx21+mnhYRxM+Bmag45kTG/eIKGi+X1hZIu9Ev93+IloJDgipjZz7jVTFPl8ZBi5a/rhOWnj/7l9XO17eEYyzS4MqAi068hAPNGeqYMVlSeckWtctn9O4faDXJYWoL+Z3QBmLr9OYuYkldK/cRWgw9BiLT5ioyufJgwtWZiWWZhMgiCWj6Js73xa7kzKe6umghZl8ExqypdzMVSPPyH/eGaIjYJUHZ2tBY5wSoENXuaEsRfB+ek6YqYfrxnW11lFI2NK4tdp7h+iALUi2Qd6saZYDWdhjXPnh6s10sE7HgvD1GYlhdC99i1CeJPuoSHNihiUY8ROxMEdRgxi+TrwgC3pT/p1fe9yCE6iwXujkGSTsqTBM/BimRQlhuxdwphHAqLcfVr4/2UKugRx46KbAwI35GmCG44ZIZhLaTB7hzkq7PC1+6ieJnL/750Cy3rebMiP2XFIX9iGatipXdpecY83eT1MTswEhkPOTsJEfySCr91K0tCuVATRUlfWNPh375jQf57Rriv4mp5LZKVuYGCbFBD4rY+bnQaOZzI5d++1FSLZ464NO4jTfLrQkXUGfqizECivxNS/G/H5/Orrytf9WS0YcnWYXHsGYv/KSRSYqLhcwtHqy2FXFifSnx0xJcfzYEvt3bZeMUAPjeDbCFRDgQ8XHsUM64S1LrCZwQXiY5cIFMI0fwyhAhl5gxMDJQJGVgRWXCwQbK1yLYNF1v6rcq7u0NMHHnN0FENX2Epjxl2RyzYe1M/1K1/JTMdJvk8MlrFcWmAZaPSmXJ/e2K1E5noEjkzK57qjk0aKp9V3OihGkfn1PeNe+lw==",
			"expires": "dDtwpNZJgwgRV6GCdOG7hQ==",
			"type": "XPrHEX2xHy+5IuXHPHigMw=="
		},
		"provider": "keycloak"
	},
	"sparql11protocol": {
		"protocol": "https",
		"port": 9001,
		"query": {
			"path": "/secure/query",
			"method": "POST",
			"format": "JSON"
		},
		"update": {
			"path": "/secure/update",
			"method": "POST",
			"format": "JSON"
		}
	},
	"sparql11seprotocol": {
		"protocol": "wss",
		"availableProtocols": {
			"ws": {
				"port": 9000,
				"path": "/subscribe"
			},
			"wss": {
				"port": 9002,
				"path": "/secure/subscribe"
			}
		}
	},
	"extended": {
		"type": "basic",
		"base": 0,
		"clients": 2,
		"messages": 1
	},
	"graphsX": {
		"default-graph-uri": [
			"http://wot.arces.unibo.it/chat/"
		],
		"named-graph-uri": [
			"http://wot.arces.unibo.it/chat/"
		],
		"using-graph-uri": [
			"http://wot.arces.unibo.it/chat/"
		],
		"using-named-graph-uri": [
			"http://wot.arces.unibo.it/chat/"
		]
	},
	"graphs": {
		"default-graph-uri": [
			"http://sepatest"
		],
		"named-graph-uri": [
			"http://sepatest"
		],
		"using-graph-uri": [
			"http://sepatest"
		],
		"using-named-graph-uri": [
			"http://sepatest"
		]
	},
	"namespaces": {
		"schema": "http://schema.org/",
		"rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
		"chat": "http://wot.arces.unibo.it/chat#"
	},
	"updates": {
		"SEND": {
			"sparql": "INSERT {_:message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?time} WHERE {?sender rdf:type schema:Person . ?receiver rdf:type schema:Person BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"text": {
					"type": "literal",
					"value": "Ciao!"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IamASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IamAReceiver"
				}
			}
		},
		"SET_RECEIVED": {
			"sparql": "INSERT {?message schema:dateReceived ?time} WHERE {?message rdf:type schema:Message BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"REMOVE": {
			"sparql": "DELETE {?message ?p ?o} WHERE {?message rdf:type schema:Message ; ?p ?o}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"STORE_SENT": {
			"sparql": "INSERT DATA {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"forcedBindings": {
				"dateSent": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"text": {
					"type": "literal",
					"value": "A message to be stored"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			},
			"graphs": {
				"using-graph-uri": [
					"http://wot.arces.unibo.it/chat/log"
				],
				"using-named-graph-uri": [
					"http://wot.arces.unibo.it/chat/log"
				]
			}
		},
		"STORE_RECEIVED": {
			"sparql": "INSERT DATA {?message schema:dateReceived ?dateReceived}",
			"forcedBindings": {
				"dateReceived": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			},
			"graphs": {
				"using-graph-uri": [
					"http://wot.arces.unibo.it/chat/log"
				],
				"using-named-graph-uri": [
					"http://wot.arces.unibo.it/chat/log"
				]
			}
		},
		"REGISTER_USER": {
			"sparql": "DELETE {?x rdf:type schema:Person . ?x schema:name ?userName} INSERT {_:id rdf:type schema:Person ; schema:name ?userName}  WHERE {OPTIONAL {?x rdf:type schema:Person . ?x schema:name ?userName}}",
			"forcedBindings": {
				"userName": {
					"type": "literal",
					"value": "My user name"
				}
			}
		},
		"DELETE_ALL": {
			"sparql": "DELETE {?s ?p ?o} WHERE {?s ?p ?o}"
		}
	},
	"queries": {
		"SENT": {
			"sparql": "SELECT ?message ?sender ?name ?text ?time WHERE {?message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver ; schema:dateSent ?time . ?sender rdf:type schema:Person ; schema:name ?name . ?receiver rdf:type schema:Person} ORDER BY ?time",
			"forcedBindings": {
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			}
		},
		"RECEIVED": {
			"sparql": "SELECT ?message ?time WHERE {?message schema:sender ?sender ; schema:dateReceived ?time ; rdf:type schema:Message}",
			"forcedBindings": {
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				}
			}
		},
		"LOG_SENT": {
			"sparql": "SELECT ?message ?sender ?receiver ?text ?dateSent WHERE {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"graphs": {
				"default-graph-uri": [
					"http://wot.arces.unibo.it/chat/log/"
				],
				"named-graph-uri": [
					"http://wot.arces.unibo.it/chat/log/"
				]
			}
		},
		"LOG_RECEIVED": {
			"sparql": "SELECT ?message ?dateReceived WHERE {?message schema:dateReceived ?dateReceived}",
			"graphs": {
				"default-graph-uri": [
					"http://wot.arces.unibo.it/chat/log/"
				],
				"named-graph-uri": [
					"http://wot.arces.unibo.it/chat/log/"
				]
			}
		},
		"USERS": {
			"sparql": "SELECT ?user ?userName WHERE {?user rdf:type schema:Person ; schema:name ?userName}"
		},
		"QUERY_ALL": {
			"sparql": "SELECT * WHERE {?s ?p ?o}"
		}
	}
}